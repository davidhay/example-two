plugins {
	id "com.gorylenko.gradle-git-properties" version "2.2.4"
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.9.1'
}

group = 'com.ealanta'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	jcenter()
	mavenCentral()
	gradlePluginPortal()
	maven { url 'https://repo.spring.io/release' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = [
			'BP_NATIVE_IMAGE': 'true'
	]
}

gitProperties {
	extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}
generateGitProperties.outputs.upToDateWhen { false } // make sure the generateGitProperties task always executes (even when git.properties is not changed)

task printGitProperties(dependsOn: 'generateGitProperties') { // make sure generateGitProperties task to execute before accessing generated properties
	doLast {
		println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
	}
}

